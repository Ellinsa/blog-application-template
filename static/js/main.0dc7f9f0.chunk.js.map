{"version":3,"sources":["app/common/pagination.tsx","app/models/reducer.tsx","presentation/components/form.tsx","presentation/components/blog.tsx","app/utils/paginate.js","presentation/container/blogContainer.tsx","index.tsx"],"names":["Pagination","page","totalPages","pageSize","handlePagination","pagesCount","Math","ceil","className","onClick","type","reducerComponent","state","action","post","filter","Error","FormComponent","props","dispatchNewPost","closeAction","React","useState","title","setTitle","message","setMessage","setPost","value","targetTitle","setTargetTitle","targetBody","setTargetBody","useEffect","id","date","Date","htmlFor","name","onChange","event","target","rows","e","preventDefault","length","handleSubmit","BlogComponent","useReducer","reducer","posts","dispatch","currentPage","setPage","visibility","setVisibility","paginatedMovies","items","pageNumber","startIndex","_","slice","take","paginate","switchVisivility","map","src","alt","newPost","alert","BlogContainerComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dc7f9f0.chunk.js","sourcesContent":["import React from 'react';\r\nexport interface Props {\r\n  page: number;\r\n  totalPages:number,\r\n  pageSize:number,\r\n  handlePagination: (page: number) => void;\r\n}\r\nexport const PaginationComponent: React.FC<Props> = ({\r\n  page,\r\n  totalPages,\r\n  pageSize,\r\n  handlePagination,\r\n}) => {\r\n  \r\n  const pagesCount = Math.ceil(totalPages / pageSize);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"paginationWrapper\">\r\n        {page !== 1 && (\r\n          <button\r\n            onClick={() => handlePagination(page - 1)}\r\n            type=\"button\"\r\n            className=\"pageItem sides\"\r\n          >\r\n            &lt;\r\n          </button>\r\n        )}\r\n\r\n        {pagesCount>1&&(\r\n        <button\r\n          onClick={() => handlePagination(1)}\r\n          type=\"button\"\r\n          className={page===1?\"pageItem active\":\"pageItem\"}\r\n        >\r\n          {1}\r\n        </button>\r\n        )}\r\n        {page > 3 && <div className=\"separator\">...</div>}\r\n        {page === pagesCount && pagesCount > 3 && (\r\n          <button\r\n            onClick={() => handlePagination(page - 2)}\r\n            type=\"button\"\r\n            className=\"pageItem\"\r\n          >\r\n            {page - 2}\r\n          </button>\r\n        )}\r\n        {page > 2 && (\r\n          <button\r\n            onClick={() => handlePagination(page - 1)}\r\n            type=\"button\"\r\n            className=\"pageItem\"\r\n          >\r\n            {page - 1}\r\n          </button>\r\n        )}\r\n        {page !== 1 && page !== pagesCount && (\r\n          <button\r\n            onClick={() => handlePagination(page)}\r\n            type=\"button\"\r\n            className=\"pageItem active\"\r\n          >\r\n            {page}\r\n          </button>\r\n        )}\r\n        {page < pagesCount - 1 && (\r\n          <button\r\n            onClick={() => handlePagination(page + 1)}\r\n            type=\"button\"\r\n            className=\"pageItem\"\r\n          >\r\n            {page + 1}\r\n          </button>\r\n        )}\r\n        {page === 1 && pagesCount > 3 && (\r\n          <button\r\n            onClick={() => handlePagination(page + 2)}\r\n            type=\"button\"\r\n            className=\"pageItem\"\r\n          >\r\n            {page + 2}\r\n          </button>\r\n        )}\r\n        {page < pagesCount - 2 && <div className=\"separator\">...</div>}\r\n        <button\r\n          onClick={() => handlePagination(pagesCount)}\r\n          type=\"button\"\r\n          className={page===pagesCount?\"pageItem active\":\"pageItem\"}\r\n        >\r\n          {pagesCount}\r\n        </button>\r\n        {page !== pagesCount && (\r\n          <button\r\n            onClick={() => handlePagination(page + 1)}\r\n            type=\"button\"\r\n            className=\"pageItem sides\"\r\n          >\r\n            &gt;\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport const Pagination = PaginationComponent;","interface IActionInterface{\r\n    type:string;\r\n    post:object\r\n}\r\n\r\nexport default function reducerComponent(state:any, action:IActionInterface) {\r\n    switch (action.type) {\r\n      case \"add\":\r\n        return [action.post,...state];\r\n      case \"delete\":\r\n        return state.filter((post:any) => post !== action.post);\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }","import React from 'react';\r\n\r\ninterface Props {\r\n    dispatchNewPost:any;\r\n    closeAction:()=>void;\r\n}\r\n\r\nconst FormComponent = (props: Props) => {\r\n    let {dispatchNewPost} = props;\r\n    let {closeAction} = props;\r\n\r\n    let [title,setTitle] = React.useState(\"\");\r\n    let [message,setMessage] = React.useState(\"\");\r\n    let [post,setPost] = React.useState({});\r\n    const [targetTitle,setTargetTitle] = React.useState({value:\"\"});\r\n    const [targetBody,setTargetBody] = React.useState({value:\"\"})\r\n    \r\n\r\n\r\n    const handleMessageChange = (event:React.ChangeEvent<HTMLTextAreaElement>) => {\r\n      if(event.target!=null){\r\n            setMessage(event.target.value);\r\n            setTargetBody(event.target)\r\n      }\r\n    };\r\n\r\n    const handleTitleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n      if(event.target!=null){\r\n            setTitle(event.target.value);\r\n            setTargetTitle(event.target)\r\n      }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setPost({\r\n            title,\r\n            message,\r\n            id:1,\r\n            date: new Date()\r\n        })\r\n    }, [title,message])\r\n\r\n    function handleSubmit(e:any) {\r\n        e.preventDefault();\r\n\r\n        targetTitle.value =\"\";\r\n        targetBody.value =\"\"\r\n\r\n        if(title.length>0&&message.length>0){\r\n            dispatchNewPost(post);\r\n            setTitle(\"\");\r\n            setMessage(\"\");\r\n        }else{\r\n            dispatchNewPost(null);\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"form-style\">\r\n          <ul>\r\n            <li>\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input type=\"text\" name=\"title\" onChange={handleTitleChange}/>\r\n              <span>Enter your title</span>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"message\">Message</label>\r\n              <textarea name=\"message\" rows={5} onChange={handleMessageChange}></textarea>\r\n              <span>Write your message</span>\r\n            </li>\r\n            <li>\r\n              <input type=\"submit\" value=\"Post\" onClick={(e)=>handleSubmit(e)}/>\r\n              <input type=\"button\" value=\"Close\" className=\"action-btn\" onClick={closeAction}/>\r\n            </li>\r\n          </ul>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormComponent;","import React, { useReducer, useState } from \"react\";\r\nimport { Pagination } from \"../../app/common/pagination\";\r\nimport reducer from \"../../app/models/reducer\";\r\nimport { paginate } from \"../../app/utils/paginate\";\r\nimport FormComponent from \"./form\";\r\n\r\n\r\n\r\ninterface IBlogComponentProps {\r\n}\r\n\r\nconst BlogComponent: React.FunctionComponent<IBlogComponentProps> = (props) => {\r\n    const [posts, dispatch] = useReducer(reducer, []);\r\n    const [currentPage,setPage]= useState(1);\r\n    const [visibility,setVisibility] = useState(false);\r\n    const pageSize = 2;\r\n    const paginatedMovies = paginate(posts, currentPage, pageSize);\r\n\r\n\r\n    const handlePages = (page:number) =>{\r\n      setPage(page)\r\n    }\r\n\r\n    interface IPostInterface{\r\n      title:string,\r\n      message:string;\r\n      id:number,\r\n      date:Date\r\n    }\r\n\r\n    const handleAddNew = (newPost:any) =>{\r\n      if(!newPost){\r\n          alert(\"Сообщение не может быть пустым!\")\r\n      }else{\r\n        setPage(1);\r\n        dispatch({ type: \"add\", post: newPost })\r\n      }\r\n    }\r\n\r\n    const switchVisivility = () => {setVisibility(!visibility)};\r\n\r\n    const map = (post:IPostInterface) => {\r\n      const deletePost = () => dispatch({ type: \"delete\", post });\r\n      return (\r\n        <div className=\"post\">\r\n          <div className=\"post-content\">\r\n            <h2>{post.title}</h2>\r\n            <p>{post.message}</p>\r\n          </div>\r\n          {/* <small>{post.date}</small> */}\r\n          <img src=\"./imgs/delete.png\" className=\"btn\" onClick={deletePost} alt=\"delete icon\"/>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    return (\r\n      <div className=\"blog-component\">\r\n        {posts.length>0?\r\n                <div className=\"posts-wrapper\">\r\n            <Pagination\r\n                page={currentPage}\r\n                totalPages={posts.length}\r\n                handlePagination={handlePages}\r\n                pageSize={pageSize}\r\n            />\r\n                <div>\r\n                {paginatedMovies.map(map)}\r\n                </div>\r\n              </div>\r\n              :\r\n              <div className=\"posts-placeholder\">\r\n                <h3>Write your first post!</h3>  \r\n              </div>\r\n      }\r\n\r\n\r\n        <div className=\"add-block\">\r\n        <div className=\"input-block\">\r\n          {visibility?<FormComponent dispatchNewPost={handleAddNew} closeAction={switchVisivility}/>:<button className=\"action-btn\" onClick={switchVisivility}>Create new post</button>}\r\n        </div>\r\n        <div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/* <a target=\"_blank\" href=\"https://icons8.com/icon/UU7eQ1Co0JW6/add\">Add</a> icon by <a target=\"_blank\" href=\"https://icons8.com\">Icons8</a> */}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default BlogComponent;\r\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\r\nimport BlogComponent from \"../components/blog\";\r\n\r\nexport default function BlogContainerComponent() {\r\nreturn <BlogComponent/>\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './presentation/styles/index.scss';\nimport BlogContainer from './presentation/container/blogContainer';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BlogContainer/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}