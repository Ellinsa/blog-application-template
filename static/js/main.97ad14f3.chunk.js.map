{"version":3,"sources":["app/models/reducer.tsx","app/common/pagination.tsx","components/blogContent.tsx","app/utils/paginate.js","app/utils/config.js","components/blogContainer.tsx","components/formContent.tsx","components/formContainer.tsx","components/app.tsx","index.tsx"],"names":["reducerComponent","state","action","type","post","filter","Error","Pagination","page","totalPages","pageSize","handlePagination","pagesCount","Math","ceil","className","onClick","BlogContent","setPage","dispatch","posts","currentPage","paginatedPosts","items","pageNumber","startIndex","_","slice","take","value","paginate","length","map","title","message","BlogContainer","FormComponent","props","dispatchNewPost","closeAction","React","useState","setTitle","setMessage","setPost","targetTitle","setTargetTitle","targetBody","setTargetBody","useEffect","id","date","Date","htmlFor","name","onChange","event","target","rows","e","preventDefault","handleSubmit","FormContainer","visibility","setVisibility","switchVisivility","newPost","alert","App","useReducer","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAEe,SAASA,EAAiBC,EAAYC,GACpD,OAAQA,EAAOC,MACd,IAAK,MACJ,MAAM,CAAGD,EAAOE,MAAhB,mBAAyBH,IAC1B,IAAK,SACJ,OAAOA,EAAMI,QAAO,SAACD,GAAD,OAAeA,IAASF,EAAOE,QACpD,QACC,MAAM,IAAIE,O,WCmGAC,EArGuC,SAAC,GAK9C,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,iBAGMC,EAAaC,KAAKC,KAAKL,EAAaC,GAE1C,OACE,8BACE,sBAAKK,UAAU,oBAAf,UACY,IAATP,GACC,wBACEQ,QAAS,kBAAML,EAAiBH,EAAO,IACvCL,KAAK,SACLY,UAAU,iBAHZ,eASDH,EAAW,GACZ,wBACEI,QAAS,kBAAML,EAAiB,IAChCR,KAAK,SACLY,UAAkB,IAAPP,EAAS,kBAAkB,WAHxC,SAKG,IAGFA,EAAO,GAAK,qBAAKO,UAAU,YAAf,iBACZP,IAASI,GAAcA,EAAa,GACnC,wBACEI,QAAS,kBAAML,EAAiBH,EAAO,IACvCL,KAAK,SACLY,UAAU,WAHZ,SAKGP,EAAO,IAGXA,EAAO,GACN,wBACEQ,QAAS,kBAAML,EAAiBH,EAAO,IACvCL,KAAK,SACLY,UAAU,WAHZ,SAKGP,EAAO,IAGF,IAATA,GAAcA,IAASI,GACtB,wBACEI,QAAS,kBAAML,EAAiBH,IAChCL,KAAK,SACLY,UAAU,kBAHZ,SAKGP,IAGJA,EAAOI,EAAa,GACnB,wBACEI,QAAS,kBAAML,EAAiBH,EAAO,IACvCL,KAAK,SACLY,UAAU,WAHZ,SAKGP,EAAO,IAGF,IAATA,GAAcI,EAAa,GAC1B,wBACEI,QAAS,kBAAML,EAAiBH,EAAO,IACvCL,KAAK,SACLY,UAAU,WAHZ,SAKGP,EAAO,IAGXA,EAAOI,EAAa,GAAK,qBAAKG,UAAU,YAAf,iBACzBH,EAAW,GACJ,wBACEI,QAAS,kBAAML,EAAiBC,IAChCT,KAAK,SACLY,UAAWP,IAAOI,EAAW,kBAAkB,WAHjD,SAKGA,IAIVJ,IAASI,GACR,wBACEI,QAAS,kBAAML,EAAiBH,EAAO,IACvCL,KAAK,SACLY,UAAU,iBAHZ,qB,gBCnFH,IAAME,EAAc,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,YACjDC,ECZA,SAAkBC,EAAOC,EAAYd,GAC1C,IAAMe,GAAcD,EAAa,GAAKd,EACtC,OAAOgB,IAAEH,GACNI,MAAMF,GACNG,KAAKlB,GACLmB,QDOmBC,CAASV,EAAOC,EEdhB,GFsCvB,OACC,qBAAKN,UAAU,iBAAf,SACEK,EAAMW,OAAS,EACf,sBAAKhB,UAAU,gBAAf,UACC,cAACR,EAAD,CACCC,KAAMa,EACNZ,WAAYW,EAAMW,OAClBpB,iBA7Be,SAACH,GACpBU,EAAQV,IA6BJE,SE9CkB,IFgDlBY,EAAeU,KA5BR,SAAC5B,GAMZ,OACC,sBAAKW,UAAU,OAAf,UACC,sBAAKA,UAAU,eAAf,UACC,6BAAKX,EAAK6B,QACV,4BAAI7B,EAAK8B,aAGV,qBAAKnB,UAAU,qBAAqBC,QAZnB,WAClBG,EAAS,CAAEhB,KAAM,SAAUC,SAC3Bc,EAAQ,eA4BP,qBAAKH,UAAU,oBAAf,SACC,6DGxCQoB,EAAgB,SAAC,GAAgF,IAA9EjB,EAA6E,EAA7EA,QAASC,EAAoE,EAApEA,SAAUC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,YACzD,OACC,8BACC,cAAC,EAAD,CAAaH,QAASA,EAASC,SAAUA,EAAUC,MAAOA,EAAOC,YAAaA,OCwElEe,EAhFO,SAACC,GACtB,IAAMC,EAAoBD,EAApBC,gBACAC,EAAgBF,EAAhBE,YAEN,EAA0BC,IAAMC,SAAS,IAAzC,mBAAMR,EAAN,KAAaS,EAAb,KACA,EAA8BF,IAAMC,SAAS,IAA7C,mBAAMP,EAAN,KAAeS,EAAf,KACA,EAAwBH,IAAMC,SAAS,IAAvC,mBAAMrC,EAAN,KAAYwC,EAAZ,KACA,EAAwCJ,IAAMC,SAAS,CAAEZ,MAAO,KAAhE,mBAAQgB,EAAR,KAAqBC,EAArB,KACA,EAAsCN,IAAMC,SAAS,CAAEZ,MAAO,KAA9D,mBAAQkB,EAAR,KAAoBC,EAApB,KA2CA,OA3BAR,IAAMS,WACL,WACCL,EAAQ,CACPX,QACAC,UACAgB,GAAI,EACJC,KAAM,IAAIC,SAGZ,CAAEnB,EAAOC,IAmBT,8BACC,qBAAKnB,UAAU,aAAf,SACC,qBAAIA,UAAU,aAAd,UACC,qBAAIA,UAAU,sBAAd,UACC,uBAAOsC,QAAQ,QAAf,mBACA,uBAAOlD,KAAK,OAAOmD,KAAK,QAAQvC,UAAU,oBAAoBwC,SAxCzC,SAACC,GACN,MAAhBA,EAAMC,SACTf,EAASc,EAAMC,OAAO5B,OACtBiB,EAAeU,EAAMC,YAsClB,uDAED,qBAAI1C,UAAU,sBAAd,UACC,uBAAOsC,QAAQ,UAAf,qBACA,0BACCC,KAAK,UACLI,KAAM,EACN3C,UAAU,oBACVwC,SAxDsB,SAACC,GACR,MAAhBA,EAAMC,SACTd,EAAWa,EAAMC,OAAO5B,OACxBmB,EAAcQ,EAAMC,YAuDjB,yDAED,qBAAI1C,UAAU,sBAAd,UACC,uBAAOZ,KAAK,SAAS0B,MAAM,OAAOd,UAAU,aAAaC,QAAS,SAAC2C,GAAD,OAnCvE,SAAsBA,GACrBA,EAAEC,iBAEFf,EAAYhB,MAAQ,GACpBkB,EAAWlB,MAAQ,GAEfI,EAAMF,OAAS,GAAKG,EAAQH,OAAS,GACxCO,EAAgBlC,GAChBsC,EAAS,IACTC,EAAW,KAEXL,EAAgB,MAwB4DuB,CAAaF,MACtF,uBAAOxD,KAAK,SAAS0B,MAAM,QAAQd,UAAU,aAAaC,QAASuB,eCrE5DuB,EAAgB,SAAC,GAA4D,IAA1D5C,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,SACxC,EAAsCsB,oBAAS,GAA/C,mBAAQsB,EAAR,KAAoBC,EAApB,KAWMC,EAAmB,WACxBD,GAAeD,IAGhB,OACC,sBAAKhD,UAAU,YAAf,UACC,qBAAKA,UAAU,cAAf,SACEgD,EACA,cAAC,EAAD,CAAezB,gBAjBE,SAAC4B,GAChBA,GAGJhD,EAAQ,GACRC,EAAS,CAAEhB,KAAM,MAAOC,KAAM8D,KAH9BC,MAAM,+BAe0C5B,YAAa0B,IAE3D,wBAAQlD,UAAU,aAAaC,QAASiD,EAAxC,+BAKF,4BCpBYG,EAZH,WACX,MAA4BC,qBAAWC,EAAS,IAAhD,mBAAQlD,EAAR,KAAeD,EAAf,KACA,EAAiCsB,mBAAS,GAA1C,mBAAQpB,EAAR,KAAqBH,EAArB,KAEA,OACC,gCACC,cAAC,EAAD,CAAeA,QAASA,EAASC,SAAUA,EAAUE,YAAaA,EAAaD,MAAOA,IACtF,cAAC,EAAD,CAAeF,QAASA,EAASC,SAAUA,Q,MCP9CoD,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.97ad14f3.chunk.js","sourcesContent":["import { IReducerAction } from './interfaces';\r\n\r\nexport default function reducerComponent(state: any, action: IReducerAction) {\r\n\tswitch (action.type) {\r\n\t\tcase 'add':\r\n\t\t\treturn [ action.post, ...state ];\r\n\t\tcase 'delete':\r\n\t\t\treturn state.filter((post: any) => post !== action.post);\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n}\r\n","import React from 'react';\r\nexport interface Props {\r\n  page: number;\r\n  totalPages:number,\r\n  pageSize:number,\r\n  handlePagination: (page: number) => void;\r\n}\r\nexport const PaginationComponent: React.FC<Props> = ({\r\n  page,\r\n  totalPages,\r\n  pageSize,\r\n  handlePagination,\r\n}) => {\r\n  \r\n  const pagesCount = Math.ceil(totalPages / pageSize);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"paginationWrapper\">\r\n        {page !== 1 && (\r\n          <button\r\n            onClick={() => handlePagination(page - 1)}\r\n            type=\"button\"\r\n            className=\"pageItem sides\"\r\n          >\r\n            &lt;\r\n          </button>\r\n        )}\r\n\r\n        {pagesCount>1&&(\r\n        <button\r\n          onClick={() => handlePagination(1)}\r\n          type=\"button\"\r\n          className={page===1?\"pageItem active\":\"pageItem\"}\r\n        >\r\n          {1}\r\n        </button>\r\n        )}\r\n        {page > 3 && <div className=\"separator\">...</div>}\r\n        {page === pagesCount && pagesCount > 3 && (\r\n          <button\r\n            onClick={() => handlePagination(page - 2)}\r\n            type=\"button\"\r\n            className=\"pageItem\"\r\n          >\r\n            {page - 2}\r\n          </button>\r\n        )}\r\n        {page > 2 && (\r\n          <button\r\n            onClick={() => handlePagination(page - 1)}\r\n            type=\"button\"\r\n            className=\"pageItem\"\r\n          >\r\n            {page - 1}\r\n          </button>\r\n        )}\r\n        {page !== 1 && page !== pagesCount && (\r\n          <button\r\n            onClick={() => handlePagination(page)}\r\n            type=\"button\"\r\n            className=\"pageItem active\"\r\n          >\r\n            {page}\r\n          </button>\r\n        )}\r\n        {page < pagesCount - 1 && (\r\n          <button\r\n            onClick={() => handlePagination(page + 1)}\r\n            type=\"button\"\r\n            className=\"pageItem\"\r\n          >\r\n            {page + 1}\r\n          </button>\r\n        )}\r\n        {page === 1 && pagesCount > 3 && (\r\n          <button\r\n            onClick={() => handlePagination(page + 2)}\r\n            type=\"button\"\r\n            className=\"pageItem\"\r\n          >\r\n            {page + 2}\r\n          </button>\r\n        )}\r\n        {page < pagesCount - 2 && <div className=\"separator\">...</div>}\r\n        {pagesCount>1&&(\r\n                <button\r\n                  onClick={() => handlePagination(pagesCount)}\r\n                  type=\"button\"\r\n                  className={page===pagesCount?\"pageItem active\":\"pageItem\"}\r\n                >\r\n                  {pagesCount}\r\n                </button>\r\n         )\r\n        }\r\n        {page !== pagesCount && (\r\n          <button\r\n            onClick={() => handlePagination(page + 1)}\r\n            type=\"button\"\r\n            className=\"pageItem sides\"\r\n          >\r\n            &gt;\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport const Pagination = PaginationComponent;","import { Pagination } from '../app/common/pagination';\r\nimport { pageSize } from '../app/utils/config';\r\nimport { IReducerAction } from '../app/models/interfaces';\r\nimport { blogPost } from '../app/models/types';\r\nimport { paginate } from '../app/utils/paginate';\r\n\r\ninterface BlogContentProps {\r\n\tsetPage: (param: number) => void;\r\n\tdispatch: (param: IReducerAction) => void;\r\n\tposts: blogPost[];\r\n\tcurrentPage: number;\r\n}\r\n\r\nexport const BlogContent = ({ setPage, dispatch, posts, currentPage }: BlogContentProps) => {\r\n\tconst paginatedPosts = paginate(posts, currentPage, pageSize);\r\n\r\n\tconst handlePages = (page: number) => {\r\n\t\tsetPage(page);\r\n\t};\r\n\r\n\tconst map = (post: blogPost) => {\r\n\t\tconst deletePost = () => {\r\n\t\t\tdispatch({ type: 'delete', post });\r\n\t\t\tsetPage(1);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"post\">\r\n\t\t\t\t<div className=\"post-content\">\r\n\t\t\t\t\t<h2>{post.title}</h2>\r\n\t\t\t\t\t<p>{post.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <small>{post.date}</small> */}\r\n\t\t\t\t<div className=\"action-btn--delete\" onClick={deletePost} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"blog-component\">\r\n\t\t\t{posts.length > 0 ? (\r\n\t\t\t\t<div className=\"posts-wrapper\">\r\n\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\tpage={currentPage}\r\n\t\t\t\t\t\ttotalPages={posts.length}\r\n\t\t\t\t\t\thandlePagination={handlePages}\r\n\t\t\t\t\t\tpageSize={pageSize}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{paginatedPosts.map(map)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"posts-placeholder\">\r\n\t\t\t\t\t<h3>Write your first post!</h3>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","export const pageSize = 2;\r\n","import React from 'react';\r\nimport { IReducerAction } from '../app/models/interfaces';\r\nimport { blogPost } from '../app/models/types';\r\nimport { BlogContent } from './blogContent';\r\n\r\ninterface BlogContainerProps {\r\n\tsetPage: (param: number) => void;\r\n\tdispatch: (param: IReducerAction) => void;\r\n\tposts: blogPost[];\r\n\tcurrentPage: number;\r\n}\r\n\r\nexport const BlogContainer = ({ setPage, dispatch, posts, currentPage }: BlogContainerProps): JSX.Element => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<BlogContent setPage={setPage} dispatch={dispatch} posts={posts} currentPage={currentPage} />\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n\tdispatchNewPost: (param: any) => void;\r\n\tcloseAction: () => void;\r\n}\r\n\r\nconst FormComponent = (props: Props) => {\r\n\tlet { dispatchNewPost } = props;\r\n\tlet { closeAction } = props;\r\n\r\n\tlet [ title, setTitle ] = React.useState('');\r\n\tlet [ message, setMessage ] = React.useState('');\r\n\tlet [ post, setPost ] = React.useState({});\r\n\tconst [ targetTitle, setTargetTitle ] = React.useState({ value: '' });\r\n\tconst [ targetBody, setTargetBody ] = React.useState({ value: '' });\r\n\r\n\tconst handleMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\tif (event.target != null) {\r\n\t\t\tsetMessage(event.target.value);\r\n\t\t\tsetTargetBody(event.target);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (event.target != null) {\r\n\t\t\tsetTitle(event.target.value);\r\n\t\t\tsetTargetTitle(event.target);\r\n\t\t}\r\n\t};\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tsetPost({\r\n\t\t\t\ttitle,\r\n\t\t\t\tmessage,\r\n\t\t\t\tid: 1,\r\n\t\t\t\tdate: new Date()\r\n\t\t\t});\r\n\t\t},\r\n\t\t[ title, message ]\r\n\t);\r\n\r\n\tfunction handleSubmit(e: any) {\r\n\t\te.preventDefault();\r\n\r\n\t\ttargetTitle.value = '';\r\n\t\ttargetBody.value = '';\r\n\r\n\t\tif (title.length > 0 && message.length > 0) {\r\n\t\t\tdispatchNewPost(post);\r\n\t\t\tsetTitle('');\r\n\t\t\tsetMessage('');\r\n\t\t} else {\r\n\t\t\tdispatchNewPost(null);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"blog__form\">\r\n\t\t\t\t<ul className=\"form__list\">\r\n\t\t\t\t\t<li className=\"form__list__element\">\r\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"title\" className=\"blog__form__input\" onChange={handleTitleChange} />\r\n\t\t\t\t\t\t<span>Enter your title</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"form__list__element\">\r\n\t\t\t\t\t\t<label htmlFor=\"message\">Message</label>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\t\trows={5}\r\n\t\t\t\t\t\t\tclassName=\"blog__form__input\"\r\n\t\t\t\t\t\t\tonChange={handleMessageChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span>Write your message</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"form__list__element\">\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Post\" className=\"action-btn\" onClick={(e) => handleSubmit(e)} />\r\n\t\t\t\t\t\t<input type=\"button\" value=\"Close\" className=\"action-btn\" onClick={closeAction} />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FormComponent;\r\n","import React, { useState } from 'react';\r\nimport { IReducerAction } from '../app/models/interfaces';\r\nimport { blogPost } from '../app/models/types';\r\nimport FormComponent from './formContent';\r\n\r\ninterface FormContainerProps {\r\n\tsetPage: (param: number) => void;\r\n\tdispatch: (param: IReducerAction) => void;\r\n}\r\n\r\nexport const FormContainer = ({ setPage, dispatch }: FormContainerProps): JSX.Element => {\r\n\tconst [ visibility, setVisibility ] = useState(false);\r\n\r\n\tconst handleAddNew = (newPost: blogPost) => {\r\n\t\tif (!newPost) {\r\n\t\t\talert(\"The message can't be empy!\");\r\n\t\t} else {\r\n\t\t\tsetPage(1);\r\n\t\t\tdispatch({ type: 'add', post: newPost });\r\n\t\t}\r\n\t};\r\n\r\n\tconst switchVisivility = () => {\r\n\t\tsetVisibility(!visibility);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"add-block\">\r\n\t\t\t<div className=\"input-block\">\r\n\t\t\t\t{visibility ? (\r\n\t\t\t\t\t<FormComponent dispatchNewPost={handleAddNew} closeAction={switchVisivility} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button className=\"action-btn\" onClick={switchVisivility}>\r\n\t\t\t\t\t\tCreate new post\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div />\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useReducer, useState } from 'react';\r\nimport reducer from '../app/models/reducer';\r\nimport { BlogContainer } from './blogContainer';\r\nimport { FormContainer } from './formContainer';\r\n\r\nconst App = (): JSX.Element => {\r\n\tconst [ posts, dispatch ] = useReducer(reducer, []);\r\n\tconst [ currentPage, setPage ] = useState(1);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<BlogContainer setPage={setPage} dispatch={dispatch} currentPage={currentPage} posts={posts} />\r\n\t\t\t<FormContainer setPage={setPage} dispatch={dispatch} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './styles/index.scss';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}